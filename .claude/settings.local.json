{
  "permissions": {
    "allow": [
      "Bash(grep:*)",
      "Bash(ls:*)",
      "Bash(source:*)",
      "Bash(find:*)",
      "Bash(mv:*)",
      "Bash(mkdir:*)",
      "Bash(tree:*)",
      "Bash(ruff:*)",
      "Bash(touch:*)",
      "Bash(cat:*)",
      "Bash(ruff check:*)",
      "Bash(pytest:*)",
      "Bash(python:*)",
      "Bash(python -m pytest:*)",
      "Bash(python3 -m pytest:*)",
      "WebFetch(domain:docs.anthropic.com)",
      "WebFetch(domain:github.com)",
      "WebSearch",
      "WebSearch",
      "WebSearch",
      "WebFetch(domain:rich.readthedocs.io)",
      "Bash(./venv/Scripts/python.exe -m pytest tests/ -v --tb=short)",
      "Bash(./venv/Scripts/pip.exe install pytest pytest-asyncio pytest-cov)",
      "mcp__upstash-context-7-mcp__resolve-library-id",
      "mcp__hardik-id-azure-resource-graph-mcp-server__query-resources",
      "Bash(./venv/Scripts/python.exe run_simple_cli.py)",
      "Bash(./venv/Scripts/python.exe test_agent.py:*)",
      "Bash(./venv/Scripts/python.exe test_simple_agent.py:*)",
      "Bash(./venv/Scripts/python.exe test_core.py)",
      "Bash(git init:*)",
      "Bash(git add:*)",
      "Bash(git rm:*)",
      "Bash(git commit:*)",
      "Bash(git config:*)",
      "Bash(gh repo create:*)",
      "Bash(git remote add:*)",
      "Bash(git remote set-url:*)",
      "Bash(git push:*)",
      "Bash(rm:*)",
      "Bash(npm:*)",
      "Bash(chmod:*)",
      "Bash(node:*)",
      "Bash(./venv/Scripts/python.exe test_mcp_install.py:*)",
      "Bash(npx create-next-app:*)",
      "mcp__serena__initial_instructions",
      "mcp__serena__check_onboarding_performed",
      "mcp__serena__onboarding",
      "mcp__serena__list_dir",
      "mcp__serena__get_symbols_overview",
      "mcp__serena__find_symbol",
      "mcp__serena__write_memory",
      "Bash(dir /B azure-research-agent)",
      "Bash(for:*)",
      "Bash(do touch \"$dir/__init__.py\")",
      "Bash(done)",
      "mcp__serena__replace_symbol_body",
      "Bash(dir:*)",
      "mcp__serena__search_for_pattern",
      "mcp__serena__find_file",
      "Bash(npx markdownlint:*)",
      "mcp__microsoft-docs-mcp__microsoft_docs_search",
      "Bash(.venvScriptspip.exe install -e .)",
      "Bash(./venv/Scripts/pip.exe install -e .)",
      "Bash(./venv/Scripts/research-agent.exe --help)",
      "Bash(./venv/Scripts/python.exe -c \"from azure_research_agent.presentation.cli.cli import main; print(''Import successful'')\")",
      "Bash(./venv/Scripts/python.exe test_simple_cli.py)",
      "Bash(research-agent:*)",
      "Bash(./venv/Scripts/python.exe -c \"from azure_research_agent.presentation.cli.cli import main; print(''CLI imports successfully'')\")",
      "Bash(./venv/Scripts/python.exe -m azure_research_agent.presentation.cli.main:*)",
      "Bash(./venv/Scripts/python.exe -c \"from azure_research_agent.presentation.web.main import start_server; print(''Server imports successfully'')\")",
      "Bash(./venv/Scripts/python.exe -c \"from azure_research_agent.presentation.web.main import start_server; print(''Server imports successfully'')\")",
      "Bash(./venv/Scripts/python.exe test_mcp_config.py)",
      "Bash(./venv/Scripts/pip.exe install mcp-server-python)",
      "Bash(./venv/Scripts/pip.exe search mcp)",
      "Bash(where npx)",
      "Bash(./venv/Scripts/python.exe -m azure_research_agent.presentation.cli.cli:*)",
      "Bash(./venv/Scripts/python.exe -c \"from azure_research_agent.core.config import get_settings; s = get_settings(); print(''MCP Servers:'', s.mcp_servers); print(''Config file:'', s.mcp_config_file)\")",
      "mcp__serena__read_memory",
      "Bash(./venv/Scripts/python.exe -c \"from azure_research_agent.presentation.web.main import app; print(''Web server imports successfully'')\")",
      "Bash(./venv/Scripts/python.exe test_complete_app.py)",
      "Bash(./venv/Scripts/python.exe test_config.py)",
      "Bash(./venv/Scripts/python.exe src/bin/research-agent:*)",
      "mcp__serena__insert_after_symbol",
      "Bash(gh pr:*)",
      "Bash(curl:*)",
      "Bash(pip3 list:*)",
      "mcp__azure-mcp__bestpractices",
      "Bash(npx:*)",
      "Bash(taskkill:*)",
      "Read(S:\\Repos\\GitHub/**)",
      "Bash(docker-compose config:*)",
      "Bash(docker-compose:*)",
      "Bash([ -d \"azure-agents\" ])",
      "Bash([ -d \"data-services\" ])",
      "Bash(pip3 install:*)",
      "Bash(markdownlint:*)"
    ],
    "deny": [],
    "defaultMode": "acceptEdits"
  },
  "hooks": {
    "PostToolUse": [
      {
        "matcher": ".*",
        "hooks": [
          {
            "type": "command",
            "command": ".claude/hooks/log-tool-usage.sh"
          }
        ]
      }
    ]
  }
}